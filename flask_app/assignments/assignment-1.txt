Hi there, you've found the text file!

Add your name to the list when you've found the file:
- Tristan Misko
- Minh Nguyen
- Daya Khunkhun
- Justin Laskowski
- Max Strongman

After adding your name, you'll need to save your work.  But how?

1) Save your text file with the change.
This saves your work locally, so that if you close the file you won't lose your changes.
But how do we make it so that everyone can see your saved work?

2) Create a new branch entitled "[YOUR NAME HERE]-branch" by typing
	git checkout -b [YOUR NAME HERE]-branch
into your command line.  For example, I typed
	git checkout -b tristan-branch
Branching allows us to work in parallel and control how we merge in changes.  We won't always
need to make new branches every time we use git, but we should always be working on separate
branches so that we don't run into merge conflicts down the line.

help minh pls

3) "Stage" your changes by running
	git add .
on your command line. This tells git that you want to create a commit (think, "save point").
You could add files individually by running something like
	git add assignment-1.txt
on the command line, but we usually always use the "." wildcard to tell git to stage all of the
files we have changed.

4) "Commit" your changes by running
	git commit -m "completed assignment 1"
Commit messages should say what you've done during your session.  Commit often! When I work on
project, I use commits to set clear goals, and I commit everytime I execute on the goal.  For
example, I might have three tasks for the day: implement the size(), contains(), and remove()
methods (i.e. functions) for an object.  I would make at least 3 commits, perhaps called
"implemented size() method," "implemented contains()", etc., and I might make more commits
if I fixed a bug or something like that ("fixed bug in remove method").  This helps you remember
what you've done and provides a nice way of organizing your work and keeping you focused.

5) "Push" your changes to GitHub by running
	git push origin [your-branch-name]
Commiting means you've created a local save point (git runs lcoally on your machine and is not the same
as GitHub), but now we want others to be able to access them.  To do this, we "push" our changes up to
the GitHub repository from which you downloaded this file.  That will create a new branch in the
GitHub repo that we can all see.  If all goes well, we'll have several different branches with all of
our names in addition to the master branch.

You'll get super used to the add, commit, push workflow after using it for a little while!

Best of luck and happy commiting,

Tristan
